<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PWaatGOitZjzZ5i1Y+Fxlx9dZk/djTorWZyiFZtdZdwUyKDbMGU6BajuaP8AoO//2gAMAwEAAgADAAAA
        EP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/
        AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/
        AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/
        AP8A/hPPR/8A/wD/AP8A/wD/AP8A/wD/AP8A/wD89z2Av/8A/wD/AP8A/wD/AP8A/wD/AP8A/wDU/pC/
        /wD/AP8A/wD/AP8A/wD/AP8A/wD/APtLITHfrHHHHnnH/wD/AP8A+vUKiIFISPKpTogh/wD/AP8A+vHu
        JHp/a/6JEOXX/wD/AP8A/wD/AP8A/wD/AP8A/wD/APTpYslv/wD/AP8A/wD/AP8A/wD/AP8A/wD/AOtO
        Pf8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/
        AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/
        AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/
        AP8A/wD/xAAoEQEAAgIBAQcFAQEAAAAAAAABABEhMUFhQHGBkaGxwRAgUWDx0eH/2gAIAQMBAT8Q/el3
        9ZmcLekKi86+MOdM32C9qnBX/ZZ3un6egfabu75Ow+s+non2m7u+TsL5MvWGAMSEpxuWly43Ok85pG4l
        Sk6DzieEecGwDzmEG5tFSjh5zoPP7+5hYizb6RisncRA6xeQgD6KEV5ZnXMBdSRAbwu6hbrvgQSzOQ48
        Yg4HMX634gUT/Ylaf37yuvTZD2YdWNnZ+RYSoB3SJawPGyCSlw/P+zMbfRfaJA+hhbqV2KbhuiXi7alD
        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
</value>
  </data>
</root>